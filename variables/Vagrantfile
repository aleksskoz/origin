$script=<<SCRIPT
	useradd -m ansible
	echo Ansible123|passwd --stdin ansible
	echo "ansible ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/ansible
	mkdir /home/ansible/.ssh
	chown ansible:ansible /home/ansible/.ssh
	chmod 0700 /home/ansible/.ssh
	sed -i.bak -e "s/asswordAuthentication no/asswordAuthentication yes/" /etc/ssh/sshd_config
	systemctl restart sshd
SCRIPT

Vagrant.configure(2) do |config|

 config.vm.define "centos1" do |conf|
	conf.vm.box="centos/7"
	conf.vm.hostname="centos1.example.com"
	conf.vm.network "private_network", ip: "10.0.0.102"
	conf.vm.provision "shell", inline: $script
 end

 config.vm.define "centos2" do |conf|
        conf.vm.box="centos/7"
        conf.vm.hostname="centos2.example.com"
        conf.vm.network "private_network", ip: "10.0.0.103"
	conf.vm.provision "shell", inline: $script
 end

 config.vm.define "ansible" do |conf|
        conf.vm.box="centos/7"
        conf.vm.hostname="ansible.example.com"
        conf.vm.network "private_network", ip: "10.0.0.101"
	conf.vm.provision "shell", inline: $script
	conf.vm.provision "shell", inline: <<-SHELL
	 yum install epel-release -y
	 yum install ansible ansible-galaxy git -y
	 cp /vagrant/inventory.txt /home/vagrant/inventory.txt
	 cp /vagrant/ansible.cfg /etc/ansible/ansible.cfg
	 cp /vagrant/httpd.yml /home/vagrant/httpd.yml
	 cp /vagrant/local_vars.yml /home/vagrant/local_vars.yml
	 cp /vagrant/variables.yml /home/vagrant/variables.yml
	 cp /vagrant/facts.yml /home/vagrant/facts.yml
	 cp /vagrant/mygroups.yml /home/vagrant/mygroups.yml
	 cp /vagrant/loops.yml /home/vagrant/loops.yml
	 ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''
	 su vagrant -c "ssh-keygen -f /home/vagrant/.ssh/id_rsa -t rsa -N ''"
	 ansible all -m copy -a "src=/home/vagrant/.ssh/id_rsa.pub dest=/home/ansible/.ssh/authorized_keys mode=0600"
#	 ansible-playbook httpd.yml
#	 ansible-playbook variables.yml
#	 ansible-playbook facts.yml
#	 ansible-playbook loops.yml
         ansible-playbook inclusions.yml
	SHELL
 end
end
