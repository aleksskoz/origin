$script = <<SCRIPT
	useradd -m devops
	useradd -m ansible
	echo Ansible123|passwd --stdin devops
	echo Ansible123|passwd --stdin ansible
	echo "ansible ALL=(ALL) ALL" > /etc/sudoers.d/ansible
	echo "devops ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/devops
	mkdir /home/devops/.ssh
	chown devops:devops /home/devops/.ssh
	chmod 0700 /home/devops/.ssh
	sed -i.bak -e "s/asswordAuthentication no/asswordAuthentication yes/" /etc/ssh/sshd_config
	systemctl restart sshd
	su devops -c "ssh-keygen -f /home/devops/.ssh/id_rsa -t rsa -N ''"
	mkdir -p /home/devops/ansible/inventory
	
SCRIPT

Vagrant.configure(2) do |config|

	config.vm.define "centos1" do |conf|
		conf.vm.box = "centos/7"
		conf.vm.hostname = 'centos1.example.com'
		conf.vm.network "private_network", ip: "172.28.128.16"
#                conf.vm.provision "shell", inline: $script
	end

	config.vm.define "centos2" do |conf|
		conf.vm.box = "centos/7"
		conf.vm.hostname = 'centos2.example.com'
		conf.vm.network "private_network", ip: "172.28.128.17"
#                conf.vm.provision "shell", inline: $script
	end

	config.vm.define "ansible" do |conf|
                conf.vm.box = "centos/7"
                conf.vm.hostname = 'ansible.example.com'
                conf.vm.network "private_network", ip: "172.28.128.15"
#                conf.vm.provision "shell", inline: $script
                conf.vm.provision "shell", inline: <<-SHELL
                        yum install epel-release -y
                        yum install ansible -y
			useradd -m devops
			echo Ansible123|passwd --stdin devops
			echo "devops ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/devops
			mkdir /home/devops/.ssh
			chown devops:devops /home/devops/.ssh
			chmod 0700 /home/devops/.ssh
			su devops -c "ssh-keygen -f /home/devops/.ssh/id_rsa -t rsa -N ''"
			mkdir -p /home/devops/ansible/inventory
			cp /vagrant/ansible.cfg /home/devops/ansible/ansible.cfg
			export $ANSIBLE_CONFIG=/home/devops/ansible/ansible.cfg
                SHELL
        end

end
